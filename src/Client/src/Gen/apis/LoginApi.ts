/* tslint:disable */
/* eslint-disable */
/**
 * BikeService.Server | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AccessTokenResponse,
  LoginRequest,
} from '../models/index';
import {
    AccessTokenResponseFromJSON,
    AccessTokenResponseToJSON,
    LoginRequestFromJSON,
    LoginRequestToJSON,
} from '../models/index';

export interface ApiLoginPostRequest {
    loginRequest: LoginRequest;
}

/**
 * LoginApi - interface
 * 
 * @export
 * @interface LoginApiInterface
 */
export interface LoginApiInterface {
    /**
     * 
     * @param {LoginRequest} loginRequest 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LoginApiInterface
     */
    apiLoginPostRaw(requestParameters: ApiLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccessTokenResponse>>;

    /**
     */
    apiLoginPost(requestParameters: ApiLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccessTokenResponse>;

}

/**
 * 
 */
export class LoginApi extends runtime.BaseAPI implements LoginApiInterface {

    /**
     */
    async apiLoginPostRaw(requestParameters: ApiLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccessTokenResponse>> {
        if (requestParameters['loginRequest'] == null) {
            throw new runtime.RequiredError(
                'loginRequest',
                'Required parameter "loginRequest" was null or undefined when calling apiLoginPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/api/Login`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LoginRequestToJSON(requestParameters['loginRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AccessTokenResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiLoginPost(requestParameters: ApiLoginPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccessTokenResponse> {
        const response = await this.apiLoginPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
