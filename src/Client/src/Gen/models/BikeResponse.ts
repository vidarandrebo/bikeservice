/* tslint:disable */
/* eslint-disable */
/**
 * BikeService.Server | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BikeResponse
 */
export interface BikeResponse {
    /**
     * 
     * @type {string}
     * @memberof BikeResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof BikeResponse
     */
    manufacturer: string;
    /**
     * 
     * @type {string}
     * @memberof BikeResponse
     */
    model: string;
    /**
     * 
     * @type {number}
     * @memberof BikeResponse
     */
    mileage: number;
    /**
     * 
     * @type {Date}
     * @memberof BikeResponse
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof BikeResponse
     */
    typeId: string;
}

/**
 * Check if a given object implements the BikeResponse interface.
 */
export function instanceOfBikeResponse(value: object): value is BikeResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('manufacturer' in value) || value['manufacturer'] === undefined) return false;
    if (!('model' in value) || value['model'] === undefined) return false;
    if (!('mileage' in value) || value['mileage'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('typeId' in value) || value['typeId'] === undefined) return false;
    return true;
}

export function BikeResponseFromJSON(json: any): BikeResponse {
    return BikeResponseFromJSONTyped(json, false);
}

export function BikeResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BikeResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'manufacturer': json['manufacturer'],
        'model': json['model'],
        'mileage': json['mileage'],
        'date': (new Date(json['date'])),
        'typeId': json['typeId'],
    };
}

export function BikeResponseToJSON(json: any): BikeResponse {
    return BikeResponseToJSONTyped(json, false);
}

export function BikeResponseToJSONTyped(value?: BikeResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'manufacturer': value['manufacturer'],
        'model': value['model'],
        'mileage': value['mileage'],
        'date': ((value['date']).toISOString()),
        'typeId': value['typeId'],
    };
}

