/* tslint:disable */
/* eslint-disable */
/**
 * BikeService.Server | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HttpValidationProblemDetails
 */
export interface HttpValidationProblemDetails {
    /**
     * 
     * @type {string}
     * @memberof HttpValidationProblemDetails
     */
    type?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HttpValidationProblemDetails
     */
    title?: string | null;
    /**
     * 
     * @type {number}
     * @memberof HttpValidationProblemDetails
     */
    status?: number | null;
    /**
     * 
     * @type {string}
     * @memberof HttpValidationProblemDetails
     */
    detail?: string | null;
    /**
     * 
     * @type {string}
     * @memberof HttpValidationProblemDetails
     */
    instance?: string | null;
    /**
     * 
     * @type {{ [key: string]: Array<string>; }}
     * @memberof HttpValidationProblemDetails
     */
    errors?: { [key: string]: Array<string>; };
}

/**
 * Check if a given object implements the HttpValidationProblemDetails interface.
 */
export function instanceOfHttpValidationProblemDetails(value: object): value is HttpValidationProblemDetails {
    return true;
}

export function HttpValidationProblemDetailsFromJSON(json: any): HttpValidationProblemDetails {
    return HttpValidationProblemDetailsFromJSONTyped(json, false);
}

export function HttpValidationProblemDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): HttpValidationProblemDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'title': json['title'] == null ? undefined : json['title'],
        'status': json['status'] == null ? undefined : json['status'],
        'detail': json['detail'] == null ? undefined : json['detail'],
        'instance': json['instance'] == null ? undefined : json['instance'],
        'errors': json['errors'] == null ? undefined : json['errors'],
    };
}

export function HttpValidationProblemDetailsToJSON(json: any): HttpValidationProblemDetails {
    return HttpValidationProblemDetailsToJSONTyped(json, false);
}

export function HttpValidationProblemDetailsToJSONTyped(value?: HttpValidationProblemDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'title': value['title'],
        'status': value['status'],
        'detail': value['detail'],
        'instance': value['instance'],
        'errors': value['errors'],
    };
}

