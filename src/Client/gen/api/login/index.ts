/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createAccessTokenResponseFromDiscriminatorValue, serializeAccessTokenResponse, serializeLoginRequest, type AccessTokenResponse, type LoginRequest } from '../../models/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/Login
 */
export interface LoginRequestBuilder extends BaseRequestBuilder<LoginRequestBuilder> {
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<AccessTokenResponse>}
     */
     post(body: LoginRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<AccessTokenResponse | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: LoginRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const LoginRequestBuilderUriTemplate = "{+baseurl}/api/Login";
/**
 * Metadata for all the requests in the request builder.
 */
export const LoginRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: LoginRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        adapterMethodName: "send",
        responseBodyFactory:  createAccessTokenResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeLoginRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
